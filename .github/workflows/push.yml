name: React build
on: 
  push:                               # master, develop Branch에서 push 이벤트가 일어났을 때만 실행
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [10.x]

    steps:
      - name: Checkout source code.   # 레포지토리 체크아웃
        uses: actions/checkout@v1
       
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com
          scope: "@wanteddev"

      - name: Cache node modules      # node modules 캐싱
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install Dependencies    # 의존 파일 설치
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}} # Github Package 설치 인증

      - name: Build                   # React Build
        run: npm run build

      - name: Slack Message
        uses: ./node_modules/@seye2/github_package
        with:
          ACTION_NAME: Send Slack Message
          JOB: ${{ toJson(job) }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required

      - name: Archive production artifacts   # upload file
        uses: actions/upload-artifact@v1
        with:
          name: build                        # artifact name
          path: build                        # upload path

  deploy_to_dev:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Download production artifacts  # download file
        uses: actions/download-artifact@v1
        with:
          name: build                        # artifact name

      - name: Deploy                  # S3에 배포하기
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
            --recursive \
            --region ap-northeast-2 \
            build s3://github-actions-dh/develop # develop branch 디렉토리로 배포
    if: contains(github.ref, 'develop')  # github branch가 develop일 때만 develop_to_dev를 실행한다.

  deploy_to_prod:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Download production artifacts  # download file
        uses: actions/download-artifact@v1
        with:
          name: build                        # artifact name

      - name: Deploy                  # S3에 배포하기
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
            --recursive \
            --region ap-northeast-2 \
            build s3://github-actions-dh/master # develop branch 디렉토리로 배포          
    if: contains(github.ref, 'master')  # github branch가 master일 때만 develop_to_prod를 실행한다.
